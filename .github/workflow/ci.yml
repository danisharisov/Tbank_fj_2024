name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build main module
        run: ./gradlew :fj_2024_lesson_5:clean :fj_2024_lesson_5:build

      - name: Run tests
        run: ./gradlew :fj_2024_lesson_5:test

      - name: Test coverage report
        run: ./gradlew :fj_2024_lesson_5:jacocoTestReport

      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          file: ./fj_2024_lesson_5/build/reports/jacoco/test/jacocoTestReport.xml
          fail_ci_if_error: true

      - name: Run SonarQube Scanner
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./gradlew sonarqube \
            -Dsonar.projectKey=danisharisov_Tbank_fj_2024 \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  docker:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to GitHub Docker Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker image
        run: docker build -t ghcr.io/${{ github.repository }}/fj_2024_lesson_5:latest .

      - name: Push Docker image to GitHub Packages
        run: docker push ghcr.io/${{ github.repository }}/fj_2024_lesson_5:latest
